

# Terraform Provider testing workflow.
name: Validation and Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "README.md"
      - ".idea"
      - ".vscode"
      - public

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build_test:
    name: Build, Validation, and Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@e75c3e80bcde46e322cd5845ae46582947c9becd # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@97f030cf6dc0b4f5e0da352c7bca9cca34579800
        with:
          terraform_wrapper: false
      - run: go mod download
      - run: task gen
      - name: Generated docs git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
      - name: Run linters
        uses: golangci/golangci-lint-action@v8.0.0 # v8.0.0
        with:
          version: latest
      - name: Build Check
        run: go build -v .
      - name: Unit Tests (race + coverage)
        run: task test RACE=true COVER=true COVERPROFILE=coverage.out
      - name: Upload unit test coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage.out
          if-no-files-found: warn
          retention-days: 7



  # Run acceptance tests in a matrix with Terraform CLI versions
  acc_test:
    name: Terraform Provider Acceptance Tests
    needs: build_test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.7.*"
          - "1.8.*"
          - "1.9.*"
          - "1.10.*"
          - "1.11.*"
          - "1.12.*"
    steps:
      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@e75c3e80bcde46e322cd5845ae46582947c9becd # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@97f030cf6dc0b4f5e0da352c7bca9cca34579800 # v3.1.0
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: go install gotest.tools/gotestsum@latest
      - run: go install github.com/bitfield/gotestdox/cmd/gotestdox@latest
      - env:
          JIRA_ENDPOINT: ${{ vars.JIRA_ENDPOINT }}
          JIRA_API_EMAIL: ${{ secrets.JIRA_API_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_PROJECT_TEST_ROLE_LEAD_ID: ${{ secrets.JIRA_PROJECT_TEST_ROLE_LEAD_ID }}
        run: task test ACC_ONLY=true
